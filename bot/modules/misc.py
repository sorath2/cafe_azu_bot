from telegram import Update
from telegram.ext import ContextTypes

from crud.order import CurrentOrder
from core.constants import UserFlowState

from crud.worker import Worker
from models.models import Order, Menu


async def help_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ."""
    await update.message.reply_text(
        '–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–∞–≤–∫–∞',
    )
    return UserFlowState.START


async def spam_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ."""
    await update.message.reply_text(
        '–°–æ—Ä–∏, —è –Ω–µ –ø–æ–Ω—è–ª...\n–ù–∞–π–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–ª–∏ '
        '–≤—ã–±–µ—Ä–∏—Ç–µ `/start`',
    )


async def generate_booking_message(
        order: CurrentOrder, worker: Worker, cafe_info=True
):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–Ω–∏–∏."""

    cafe = order.cafe
    menu = []
    for set_in_menu, quantity in order.menu.values():
        menu_in_order = Menu()
        menu_in_order.set_id = set_in_menu.id
        menu_in_order.quantity = quantity
        menu.append(menu_in_order)
    if order.order_id:
        message = f'–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: <b>{order.order_id}</b>\n'
    else:
        message = ' '

    if cafe:
        message += (
            f'–ö–∞—Ñ–µ: <b>{cafe.name} ({cafe.address})</b>\n'
        )
    if cafe_info:
        message += (
            f'‚òéÔ∏è {cafe.phone}\n'
            f'üåç {cafe.map_link}\n'
        )
    if order.from_date:
        message += (
            f'–î–∞—Ç–∞: <b>{order.from_date.strftime("%d.%m.%Y")}</b>\n'
        )

    total_cost = 0
    total_quantity = 0

    if menu:
        menu_message = '–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–µ—Ç—ã:\n'
        for menu_item in menu:
            set_info = await worker.get_sets_by_id(menu_item.set_id)

            menu_message += (
                f'\t- {set_info.name}  {menu_item.quantity} —à—Ç. '
                f'x {set_info.cost}—Ä—É–±. = '
                f'{menu_item.quantity * set_info.cost} —Ä—É–±.\n'
            )
            total_cost += menu_item.quantity * set_info.cost
            total_quantity += menu_item.quantity

        menu_message += (
            f'\t–í—Å–µ–≥–æ <b>{total_quantity}</b> —Å–µ—Ç(–∞, –æ–≤) '
            f'–Ω–∞ <b>{total_cost}</b> —Ä—É–±.\n'
        )
        message += menu_message

    return message
